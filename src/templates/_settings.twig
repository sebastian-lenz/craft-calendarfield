{% import '_includes/forms' as forms %}

<style>
  .cfTable {
    width: 100%;
    border: 1px solid #e3e5e8;
  }

  .cfTable th {
    padding: 8px 12px;
    border-bottom: 1px solid #e3e5e8;
    background: #f1f5f8;
  }

  .cfTable td {
    padding: 8px 12px;
    border-bottom: 1px solid #e3e5e8;
    text-align: center !important;
  }

  .cfTable tr:last-child td,
  .cfTable tr:last-child th {
    border-bottom: none;
  }
</style>

{{- forms.textField({
  errors: field.getErrors('attachmentNameTemplate'),
  instructions: 'A twig template defining the file name of downloaded ics files.',
  label: 'Attachment name template',
  name: 'attachmentNameTemplate',
  required: true,
  value: field.attachmentNameTemplate,
}) -}}

{{- forms.textareaField({
  errors: field.getErrors('descriptionTemplate'),
  instructions: 'A twig template defining the description of downloaded ics files.',
  label: 'Description template',
  name: 'descriptionTemplate',
  required: true,
  rows: 3,
  value: field.descriptionTemplate,
}) -}}

{{- forms.lightSwitchField({
  errors: field.getErrors('enableRRule'),
  instructions: 'Whether the field should display a recuring rule field or not.',
  label: 'Show recuring rule field',
  name: 'enableRRule',
  on: field.enableRRule,
}) -}}

{{- forms.lightSwitchField({
  errors: field.getErrors('enableStatus'),
  instructions: 'Whether the field should display an event status field or not.',
  label: 'Show status field',
  name: 'enableStatus',
  on: field.enableStatus,
}) -}}

{{- forms.lightSwitchField({
  errors: field.getErrors('useOwnerUrl'),
  instructions: 'Send the url of the owning element as the event url in ics files. Although this is part of the spec, we noticed most calendar apps do not support this.',
  label: 'Use owner url',
  name: 'useOwnerUrl',
  on: field.useOwnerUrl,
}) -}}

{{- forms.textField({
  errors: field.getErrors('initialLatitude'),
  instructions: 'Initial geo coordinates, use a tool like <a href="https://www.latlong.net/" target="_blank">latlong.net</a> to find latitude / longitude values.',
  label: 'Initial latitude',
  name: 'initialLatitude',
  required: true,
  type: 'number',
  value: field.initialLatitude,
}) -}}

{{- forms.textField({
  errors: field.getErrors('initialLongitude'),
  label: 'Initial longitude',
  name: 'initialLongitude',
  required: true,
  type: 'number',
  value: field.initialLongitude,
}) -}}

<div class="field has-errors">
  <div class="heading">
    <label>Extra fields settings</label>
    <div class="instructions">
      <p>Controls the visibility of extra fields. If "Translatable" is set, the field can be translated even if the containing field is set to "Not translatable".</p>
    </div>
  </div>
  <div class="input ltr errors">
    <table class="cfTable">
      <tr>
        <th><b>Field name</b></th>
        <td><b>Hidden</b></td>
        <td><b>Translatable</b></td>
      </tr>
      {% for attributeName in ['title', 'description', 'location'] %}
        {% set attributeSettings = field.getAttributeSettings(attributeName) %}
        <tr>
          <th>{{ attributeName|ucfirst }}</th>
          <td>
            <input
              type="checkbox"
              name="attributeSettings[{{ attributeName }}][hidden]"
              value="1"
              {% if attributeSettings.hidden %} checked{% endif %}
            />
          </td>
          <td>
            <input
              type="checkbox"
              name="attributeSettings[{{ attributeName }}][translatable]"
              value="1"
              {% if attributeSettings.translatable %} checked{% endif %}
            />
          </td>
        </tr>
      {% endfor %}
    </table>
  </div>
</div>
